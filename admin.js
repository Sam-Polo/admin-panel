// –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–∞–Ω–µ–ª–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
function initAdminPanel(user, isSuperuser) {
    const content = document.getElementById('content');
    
    // —Å–æ–∑–¥–∞–µ–º –Ω–∞–≤–∏–≥–∞—Ü–∏—é
    const nav = document.createElement('nav');
    nav.innerHTML = `
        <button class="nav-btn active" data-section="objects">–û–±—ä–µ–∫—Ç—ã</button>
        ${isSuperuser ? '<button class="nav-btn" data-section="tags">–¢–µ–≥–∏</button>' : ''}
    `;
    content.appendChild(nav);
    
    // —Å–æ–∑–¥–∞–µ–º —Å–µ–∫—Ü–∏–∏
    const sections = document.createElement('div');
    sections.className = 'sections';
    sections.innerHTML = `
        <div id="objects-section" class="section active">
            <div class="section-header">
                <h2>–°–ø–æ—Ä—Ç–∏–≤–Ω—ã–µ –æ–±—ä–µ–∫—Ç—ã</h2>
                <button id="add-object-btn">–î–æ–±–∞–≤–∏—Ç—å –æ–±—ä–µ–∫—Ç</button>
            </div>
            <div id="objects-list"></div>
        </div>
        ${isSuperuser ? `
        <div id="tags-section" class="section">
            <div class="section-header">
                <h2>–¢–µ–≥–∏</h2>
                <button id="add-tag-btn">–î–æ–±–∞–≤–∏—Ç—å —Ç–µ–≥</button>
            </div>
            <div id="tags-list"></div>
        </div>
        ` : ''}
    `;
    content.appendChild(sections);
    
    // –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
    nav.addEventListener('click', (e) => {
        if (e.target.classList.contains('nav-btn')) {
            // –æ–±–Ω–æ–≤–ª—è–µ–º –∞–∫—Ç–∏–≤–Ω—É—é –∫–Ω–æ–ø–∫—É
            nav.querySelectorAll('.nav-btn').forEach(btn => btn.classList.remove('active'));
            e.target.classList.add('active');
            
            // –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –Ω—É–∂–Ω—É—é —Å–µ–∫—Ü–∏—é
            const section = e.target.dataset.section;
            sections.querySelectorAll('.section').forEach(s => s.classList.remove('active'));
            document.getElementById(`${section}-section`).classList.add('active');
        }
    });
    
    // –∑–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ
    loadObjects(user, isSuperuser);
    if (isSuperuser) {
        loadTags();
    }
}

// –∑–∞–≥—Ä—É–∑–∫–∞ –æ–±—ä–µ–∫—Ç–æ–≤
async function loadObjects(user, isSuperuser) {
    const objectsList = document.getElementById('objects-list');
    objectsList.innerHTML = '<div class="loading">–ó–∞–≥—Ä—É–∑–∫–∞...</div>';
    
    try {
        let query = db.collection('sportobjects');
        
        // –µ—Å–ª–∏ –Ω–µ —Å—É–ø–µ—Ä–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ –¥–æ—Å—Ç—É–ø–Ω—ã–µ –æ–±—ä–µ–∫—Ç—ã
        if (!isSuperuser) {
            // –ø–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –æ–±—ä–µ–∫—Ç–æ–≤ –∏–∑ claims
            const idTokenResult = await user.getIdTokenResult();
            const objectIds = idTokenResult.claims.objectIds || [];
            
            if (objectIds.length === 0) {
                objectsList.innerHTML = '<div class="empty">–£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –æ–±—ä–µ–∫—Ç–æ–≤</div>';
                return;
            }
            
            // —Ñ–∏–ª—å—Ç—Ä—É–µ–º –ø–æ ID –æ–±—ä–µ–∫—Ç–æ–≤
            query = query.where('__name__', 'in', objectIds);
        }
        
        const snapshot = await query.get();
        
        if (snapshot.empty) {
            objectsList.innerHTML = '<div class="empty">–ù–µ—Ç –æ–±—ä–µ–∫—Ç–æ–≤</div>';
            return;
        }
        
        // —Å–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—É
        const table = document.createElement('table');
        table.innerHTML = `
            <thead>
                <tr>
                    <th>–ù–∞–∑–≤–∞–Ω–∏–µ</th>
                    <th>–ê–¥—Ä–µ—Å</th>
                    <th>–¢–µ–≥–∏</th>
                    <th>–î–µ–π—Å—Ç–≤–∏—è</th>
                </tr>
            </thead>
            <tbody></tbody>
        `;
        
        // –∑–∞–ø–æ–ª–Ω—è–µ–º —Ç–∞–±–ª–∏—Ü—É
        const tbody = table.querySelector('tbody');
        snapshot.forEach(doc => {
            const data = doc.data();
            const row = document.createElement('tr');
            row.innerHTML = `
                <td>${data.name}</td>
                <td>${data.address}</td>
                <td>${data.tags ? data.tags.length : 0}</td>
                <td>
                    <button class="edit-btn" data-id="${doc.id}">‚úèÔ∏è</button>
                    <button class="delete-btn" data-id="${doc.id}">üóëÔ∏è</button>
                </td>
            `;
            tbody.appendChild(row);
        });
        
        objectsList.innerHTML = '';
        objectsList.appendChild(table);
        
        // –¥–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
        addObjectHandlers(user);
        
    } catch (error) {
        objectsList.innerHTML = `<div class="error">–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏: ${error.message}</div>`;
    }
}

// –∑–∞–≥—Ä—É–∑–∫–∞ —Ç–µ–≥–æ–≤
async function loadTags() {
    const tagsList = document.getElementById('tags-list');
    tagsList.innerHTML = '<div class="loading">–ó–∞–≥—Ä—É–∑–∫–∞...</div>';
    
    try {
        const snapshot = await db.collection('tags').get();
        
        if (snapshot.empty) {
            tagsList.innerHTML = '<div class="empty">–ù–µ—Ç —Ç–µ–≥–æ–≤</div>';
            return;
        }
        
        // —Å–æ–∑–¥–∞–µ–º –¥–µ—Ä–µ–≤–æ —Ç–µ–≥–æ–≤
        const tree = document.createElement('div');
        tree.className = 'tags-tree';
        
        // TODO: —Ä–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–µ—Ä–∞—Ä—Ö–∏–∏ —Ç–µ–≥–æ–≤
        
        tagsList.innerHTML = '';
        tagsList.appendChild(tree);
        
    } catch (error) {
        tagsList.innerHTML = `<div class="error">–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏: ${error.message}</div>`;
    }
}

// –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –¥–ª—è –æ–±—ä–µ–∫—Ç–æ–≤
function addObjectHandlers(user) {
    // –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è
    document.getElementById('add-object-btn').addEventListener('click', () => {
        // TODO: –ø–æ–∫–∞–∑–∞—Ç—å —Ñ–æ—Ä–º—É –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –æ–±—ä–µ–∫—Ç–∞
    });
    
    // –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∏ —É–¥–∞–ª–µ–Ω–∏—è
    document.querySelectorAll('.edit-btn').forEach(btn => {
        btn.addEventListener('click', () => {
            const id = btn.dataset.id;
            // TODO: –ø–æ–∫–∞–∑–∞—Ç—å —Ñ–æ—Ä–º—É —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –æ–±—ä–µ–∫—Ç–∞
        });
    });
    
    document.querySelectorAll('.delete-btn').forEach(btn => {
        btn.addEventListener('click', async () => {
            if (confirm('–£–¥–∞–ª–∏—Ç—å –æ–±—ä–µ–∫—Ç?')) {
                try {
                    await db.collection('sportobjects').doc(btn.dataset.id).delete();
                    loadObjects(user, true); // –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º —Å–ø–∏—Å–æ–∫
                } catch (error) {
                    alert('–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è: ' + error.message);
                }
            }
        });
    });
} 