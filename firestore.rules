rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // функция проверки роли админа
    function isAdmin() {
      return request.auth != null && request.auth.token.admin == true;
    }
    
    // функция проверки роли модератора
    function isModerator() {
      return request.auth != null && request.auth.token.moderator == true;
    }
    
    // функция проверки доступа модератора к объекту
    function hasAccessToObject(objectId) {
      return isModerator() && 
             request.auth.token.objectIds != null && 
             objectId in request.auth.token.objectIds;
    }
    
    // правила для коллекции sportobjects
    match /sportobjects/{objectId} {
      // чтение: админ или модератор с доступом к объекту
      allow read: if isAdmin() || hasAccessToObject(objectId);
      
      // создание: админ или модератор
      allow create: if isAdmin() || isModerator();
      
      // обновление: админ или модератор с доступом к объекту
      allow update: if isAdmin() || hasAccessToObject(objectId);
      
      // удаление: админ или модератор с доступом к объекту
      allow delete: if isAdmin() || hasAccessToObject(objectId);
    }
    
    // правила для коллекции tags
    match /tags/{tagId} {
      // чтение: все авторизованные пользователи
      allow read: if request.auth != null;
      
      // запись: только админ
      allow write: if isAdmin();
    }

    // правила для коллекции users
    match /users/{userId} {
      // доступ только для админа
      allow read, write: if isAdmin();
    }

    // Для остальных коллекций требуем аутентификацию
    match /{document=**} {
      allow read, write: if request.auth != null;
    }
  }
}